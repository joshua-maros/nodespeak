cmake_minimum_required(VERSION 3.8.2)
project(Waveguide)

if(MSVC)
  add_compile_options(/W4 /WX)
else(MSVC)
  add_compile_options(-Wall -Wextra -pedantic)
endif(MSVC)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_BUILD_TYPE Release)
set(SOURCE_DIR source)
set(INCLUDE_DIR include)
set(SPIRIT_DIR spirit)

set(STATIC_LIB_TARGET waveguide)
set(STANDALONE_TARGET waveguide_standalone)
set(TEST_RUNNER_TARGET waveguide_test_runner)

set(Boost_USE_STATIC_LIBS ON)
set(Boost_USE_STATIC_RUNTIME ON)
find_package(Boost REQUIRED system)

set(TARGET ${STATIC_LIB_TARGET})
file(GLOB_RECURSE SRC_FILES ${SOURCE_DIR}/*.cpp)
add_library(${TARGET} STATIC ${SRC_FILES})
target_include_directories(${TARGET} PRIVATE ${SOURCE_DIR})
target_include_directories(${TARGET} PRIVATE ${INCLUDE_DIR})
target_include_directories(${TARGET} PRIVATE ${SPIRIT_DIR}/include)
target_link_libraries(${TARGET} PRIVATE boost_system.a)

set(TARGET ${STANDALONE_TARGET})
set(TARGET_SOURCE_DIR targets/standalone/)
file(GLOB_RECURSE SRC_FILES ${TARGET_SOURCE_DIR}/*.cpp)
add_executable(${TARGET} ${SRC_FILES})
add_dependencies(${TARGET} ${STATIC_LIB_TARGET})
target_include_directories(${TARGET} PRIVATE ${INCLUDE_DIR})
target_link_libraries(${TARGET} PRIVATE ${STATIC_LIB_TARGET})

set(TARGET ${TEST_RUNNER_TARGET})
set(TARGET_SOURCE_DIR targets/test_runner/)
file(GLOB_RECURSE SRC_FILES ${TARGET_SOURCE_DIR}/*.cpp)
add_executable(${TARGET} ${SRC_FILES})
add_dependencies(${TARGET} ${STATIC_LIB_TARGET})
target_include_directories(${TARGET} PRIVATE ${INCLUDE_DIR})
target_link_libraries(${TARGET} PRIVATE ${STATIC_LIB_TARGET})
